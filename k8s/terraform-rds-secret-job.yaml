apiVersion: batch/v1
kind: Job
metadata:
  name: terraform-rds-secret-job
spec:
  backoffLimit: 100
  template:
    spec:
      serviceAccountName: rds-job-sa
      restartPolicy: Never
      containers:
      - name: terraform
        image: hashicorp/terraform:1.5.0
        workingDir: /workspace
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws_access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: aws_secret_access_key
          command:
            - /bin/sh
            - -c
            - |
              DB_IDENTIFIER=$(echo "${STAGE}-${APP_NAME}-db" | tr '_' '-')
              export TF_VAR_db_identifier=$DB_IDENTIFIER        
        command:
        - /bin/sh
        - -c
        - |
          DB_IDENTIFIER=$(echo "${STAGE}-${APP_NAME}-db" | tr '_' '-')
          export TF_VAR_db_identifier=$DB_IDENTIFIER
          # cp /config/main.tf .
          terraform init \
            -backend-config="bucket=terraformstatee" \
            -backend-config="key=rds/${{ github.ref_name }}/terraform.tfstate" \
            -backend-config="region=eu-north-1"
          terraform apply -auto-approve \
            -var="db_username=mydbuser" \
            -var="db_password=MySecretPass123" \
            -var="db_identifier=my-rds-instance-1" \
            -var="aws_region=eu-north-1" && \
          # terraform plan \
          #     -var="db_username=mydbuser" \
          #     -var="db_password=MySecretPass123" \
          #     -var="db_identifier=my-rds-instance-1" \
          #     -var="aws_region=eu-north-1" && \
          terraform output -json > /shared/output.json
        volumeMounts:
        - name: config
          mountPath: /config
        - name: shared
          mountPath: /shared
      - name: create-secret
        image: bitnami/kubectl:latest
        workingDir: /shared
        command:
        - /bin/sh
        - -c
        - |
          apk add --no-cache jq curl >/dev/null
          while [ ! -f /shared/output.json ]; do sleep 2; done
          echo "Parsing output.json..."
          ENDPOINT=$(jq -r '.endpoint.value' /shared/output.json)
          USERNAME=$(jq -r '.username.value' /shared/output.json)
          PASSWORD=$(jq -r '.password.value' /shared/output.json)

          echo "Creating Kubernetes Secret..."
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: rds-credentials
          type: Opaque
          stringData:
            endpoint: "$ENDPOINT"
            username: "$USERNAME"
            password: "$PASSWORD"
          EOF
        volumeMounts:
        - name: shared
          mountPath: /shared
      volumes:
      - name: config
        configMap:
          name: terraform-rds-config
      - name: shared
        emptyDir: {}
---
